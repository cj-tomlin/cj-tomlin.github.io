---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";

// Get the slug from the params
export async function getStaticPaths() {
    const blogPosts = await getCollection("blog");
    return blogPosts.map((post) => ({
        params: { slug: post.slug },
        props: { post },
    }));
}

// Get the post from props
const { post } = Astro.props;

// Format date function
const formatDate = (date: Date) => {
    return new Intl.DateTimeFormat("en-GB", {
        day: "2-digit",
        month: "2-digit",
        year: "numeric",
    }).format(date);
};

// Render the markdown content
const { Content } = await post.render();
---

<Layout
    title={`${post.data.title} | CJ Tomlin Blog`}
    description={post.data.excerpt}
    type="article"
    publishedTime={post.data.publishDate.toISOString()}
    tags={post.data.tags}
>
    <div class="mb-8">
        <a
            href="/blog"
            class="text-primary hover:underline mb-4 flex items-center"
        >
            <svg
                class="w-5 h-5 mr-1 rotate-180"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 20 20"
                fill="currentColor"
            >
                <path
                    fill-rule="evenodd"
                    d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                    clip-rule="evenodd"></path>
            </svg>
            Back to blog
        </a>
    </div>

    <article class="prose prose-lg dark:prose-invert max-w-none">
        <header class="mb-12">
            <h1 class="text-4xl font-bold leading-tight mb-4">
                {post.data.title}
            </h1>

            <div
                class="flex flex-wrap items-center gap-3 text-sm text-muted-foreground mb-6"
            >
                <time datetime={post.data.publishDate.toISOString()}>
                    {formatDate(post.data.publishDate)}
                </time>
                {
                    post.data.tags && post.data.tags.length > 0 && (
                        <>
                            <span class="text-muted-foreground/60">â€¢</span>
                            <div class="flex flex-wrap gap-2">
                                {post.data.tags.map((tag: string) => (
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary border border-primary/20">
                                        {tag}
                                    </span>
                                ))}
                            </div>
                        </>
                    )
                }
            </div>

            {
                post.data.excerpt && (
                    <p class="text-lg text-muted-foreground leading-relaxed italic border-l-4 border-primary/30 pl-6 py-2">
                        {post.data.excerpt}
                    </p>
                )
            }
        </header>

        <div class="prose-content">
            <Content />
        </div>
    </article>
</Layout>

<style is:global>
    /* Enhanced Typography and Spacing */
    .prose-content {
        line-height: 1.8;
        font-size: 1.1rem;
    }

    /* Headings with better hierarchy */
    .prose-content h1 {
        font-size: 2.5rem;
        font-weight: 800;
        margin-top: 3rem;
        margin-bottom: 1.5rem;
        line-height: 1.2;
        color: hsl(var(--foreground));
        border-bottom: 2px solid hsl(var(--primary) / 0.2);
        padding-bottom: 0.5rem;
    }

    .prose-content h2 {
        font-size: 2rem;
        font-weight: 700;
        margin-top: 2.5rem;
        margin-bottom: 1.25rem;
        line-height: 1.3;
        color: hsl(var(--foreground));
    }

    .prose-content h3 {
        font-size: 1.5rem;
        font-weight: 600;
        margin-top: 2rem;
        margin-bottom: 1rem;
        line-height: 1.4;
        color: hsl(var(--foreground));
    }

    .prose-content h4 {
        font-size: 1.25rem;
        font-weight: 600;
        margin-top: 1.75rem;
        margin-bottom: 0.75rem;
        color: hsl(var(--foreground));
    }

    /* Improved paragraph spacing and readability */
    .prose-content p {
        margin-bottom: 1.5rem;
        line-height: 1.8;
        color: hsl(var(--foreground) / 0.9);
    }

    /* Enhanced lists with better spacing */
    .prose-content ul,
    .prose-content ol {
        margin-top: 1.5rem;
        margin-bottom: 1.5rem;
        padding-left: 2rem;
    }

    .prose-content ul {
        list-style-type: disc;
        list-style-position: outside;
    }

    .prose-content ul li {
        margin-bottom: 0.75rem;
        line-height: 1.7;
        padding-left: 0.5rem;
    }

    .prose-content ul li::marker {
        color: #ea580c; /* Orange accent color */
    }

    .prose-content ol li {
        margin-bottom: 0.75rem;
        line-height: 1.7;
    }

    /* Enhanced code blocks */
    .prose-content pre {
        background-color: hsl(var(--muted));
        border: 1px solid hsl(var(--border));
        border-radius: 0.75rem;
        padding: 1.5rem;
        margin: 2rem 0;
        overflow-x: auto;
        font-size: 0.9rem;
        line-height: 1.6;
        box-shadow:
            0 4px 6px -1px rgb(0 0 0 / 0.1),
            0 4px 6px -2px rgb(0 0 0 / 0.05);
    }

    .dark .prose-content pre {
        background-color: rgb(15 23 42);
        border-color: rgb(30 41 59);
    }

    /* Inline code styling */
    .prose-content code:not(pre code) {
        background-color: hsl(var(--muted));
        color: hsl(var(--primary));
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-size: 0.9em;
        font-weight: 500;
        border: 1px solid hsl(var(--border));
    }

    .prose-content pre code {
        background: none;
        border: none;
        padding: 0;
        color: inherit;
        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
            "Liberation Mono", "Courier New", monospace;
    }

    /* Blockquotes */
    .prose-content blockquote {
        border-left: 4px solid hsl(var(--primary));
        background-color: hsl(var(--muted) / 0.5);
        padding: 1.5rem;
        margin: 2rem 0;
        border-radius: 0 0.5rem 0.5rem 0;
        font-style: italic;
        color: hsl(var(--foreground) / 0.8);
    }

    /* Links */
    .prose-content a {
        color: #ea580c; /* Orange accent color */
        text-decoration: underline;
        text-decoration-color: #ea580c40; /* Orange with transparency */
        text-underline-offset: 3px;
        transition: all 0.2s ease;
        font-weight: 500;
    }

    .prose-content a:hover {
        text-decoration-color: #ea580c;
        color: #dc2626; /* Slightly darker orange on hover */
        text-decoration-thickness: 2px;
    }

    /* Horizontal rules */
    .prose-content hr {
        border: none;
        height: 2px;
        background: linear-gradient(
            to right,
            transparent,
            hsl(var(--border)),
            transparent
        );
        margin: 3rem 0;
    }

    /* Tables */
    .prose-content table {
        width: 100%;
        border-collapse: collapse;
        margin: 2rem 0;
        border-radius: 0.5rem;
        overflow: hidden;
        border: 1px solid hsl(var(--border));
    }

    .prose-content th,
    .prose-content td {
        padding: 0.75rem 1rem;
        text-align: left;
        border-bottom: 1px solid hsl(var(--border));
    }

    .prose-content th {
        background-color: hsl(var(--muted));
        font-weight: 600;
        color: hsl(var(--foreground));
    }

    .prose-content tr:hover {
        background-color: hsl(var(--muted) / 0.5);
    }

    /* Images */
    .prose-content img {
        border-radius: 0.75rem;
        box-shadow:
            0 10px 25px -5px rgb(0 0 0 / 0.1),
            0 4px 6px -2px rgb(0 0 0 / 0.05);
        margin: 2rem 0;
    }

    /* First paragraph after headings */
    .prose-content h1 + p,
    .prose-content h2 + p,
    .prose-content h3 + p {
        margin-top: 1rem;
    }

    /* Strong and emphasis */
    .prose-content strong {
        font-weight: 700;
        color: hsl(var(--foreground));
    }

    .prose-content em {
        font-style: italic;
        color: hsl(var(--foreground) / 0.8);
    }
</style>
